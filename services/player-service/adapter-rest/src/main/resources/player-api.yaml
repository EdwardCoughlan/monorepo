openapi: 3.0.0
info:
  version: 1.0.0
  title: Players Service API

tags:
  - name: player

paths:

  /player:
    post:
      summary: Create a player
      operationId: createPlayer
      tags:
        - player
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePlayerRequest"
      responses:
        "201":
          description: Player was created
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    get:
      summary: Get all players
      operationId: getAllPlayers
      parameters:
        - name: position
          in: query
          description: Position of the player
          required: false
          schema:
            $ref: "#/components/schemas/PlayerPosition"
        - name: size
          in: query
          description: Number of players to return
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: page
          in: query
          description: Page number of the players to return
          required: false
          schema:
            default: 0
            type: integer
            format: int32
      tags:
        - player
      responses:
        "200":
          description: Players were retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /player/generate:
    post:
      summary: Generate a number of players
      operationId: generatePlayer
      tags:
        - player
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GeneratePlayersRequest"
      responses:
        "201":
          description: Players were generated
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

components:

  responses:

    DefaultErrorResponse:
      description: Unexpected error
      content:
        "*/*":
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Error"

  schemas:

    PlayerSkill:
      type: string
      enum:
        - SCORE
        - OFFENSIVE_POSITION
        - BALL_CONTROL
        - PASSING
        - CO
        - TACKLING
        - DEFENSE_POSITION

    PlayerPosition:
      type: string
      enum:
        - GOALKEEPER
        - DEFENDER
        - MIDDLE
        - FORWARD
      example: GOALKEEPER

    CreatePlayerRequest:
      type: object
      properties:
        points:
          type: integer
          format: int32
          minimum: 1
          maximum: 700
          example: 350
        age:
          type: integer
          format: int32
          minimum: 15
          maximum: 33
          example: 21
        position:
          $ref: "#/components/schemas/PlayerPosition"

    GeneratePlayersRequest:
      type: object
      properties:
        numberOfPlayers:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          example: 10

    PlayerResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
        age:
          type: integer
          format: int32
          minimum: 15
          maximum: 33
          example: 21
        name:
          type: string
          example: John Doe
        position:
          $ref: "#/components/schemas/PlayerPosition"
        actualSkills:
          type: object
          example: { "SCORE": 50 }
          additionalProperties:
            type: string
            properties:
              code:
                $ref: "#/components/schemas/PlayerSkill"
              text:
                type: integer
                format: int32
                minimum: 0
                maximum: 100
                example: 50

    Error:
      type: "object"
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
